import java.io.*;
import java.util.*;

public class Main {

    public static int maximalRectangle(int[][] a) { 
        int ans = Integer.MIN_VALUE;
        
        int[] height = new int[a[0].length];
        
        for(int i = 0 ; i < a.length;i++){
            for(int j = 0 ; j < a[0].length ; j++){
               if(a[i][j] == 0){
                    height[j] = 0;
                }else{
                    height[j]++;
                }
            }
            ans = Math.max(ans , max(height));
        }
        return ans;
        
    }
    public static int max(int[] arr){
        int n = arr.length;
        
        int[] rb = new int[n];
        Stack< Integer > st = new Stack<>();
        st.push(arr.length - 1);
        rb[arr.length - 1] = arr.length;
        for(int i = n - 2 ; i >= 0;i--){
            while(st.size() > 0 && arr[i] <= arr[st.peek()]){
                st.pop();
            }
            rb[i] = st.size() == 0 ? arr.length : st.peek();
            
            st.push(i);
        }
        
        st = new Stack<>();
        int[] lb = new int[n];
        st.push(0);
        lb[0] = -1;
        for(int i = 1 ; i < n ;i++){
            while(st.size() > 0 && arr[i] <= arr[st.peek()]){
                st.pop();
            }
            lb[i] = st.size() == 0 ? -1 : st.peek();
            st.push(i);
        }
        int maxarea = 0;
        for(int i = 0 ; i < arr.length;i++){
            int width = rb[i] - lb[i] - 1;
            int area = width * arr[i];
            maxarea = Math.max(maxarea , area);
        }
        return maxarea;
    }

    public static void main(String[] args) throws Exception {
        BufferedReader read = new BufferedReader(new InputStreamReader(System.in));

        int row = Integer.parseInt(read.readLine());
        int col = Integer.parseInt(read.readLine());
        
        int bmat[][] = new int[row][col];

        for(int i=0;i<row;i++){
            String s = read.readLine();
            for(int j=0;j<col;j++){
                bmat[i][j] = s.charAt(j)-'0';
            }
        }

        int result = maximalRectangle(bmat);
        System.out.println(result);
        
    }
}
